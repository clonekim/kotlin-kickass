buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.koin:koin-gradle-plugin:$koin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'kotlin'
apply plugin: 'koin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

group 'todo'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'http://10.46.44.5:8081/repository/maven-releases'}
    maven { url 'http://10.46.44.5:8081/repository/maven-snapshots'}

}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-host-common:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    compile "org.koin:koin-ktor:$koin_version"
    compile "org.koin:koin-logger-slf4j:$koin_version"
    compile "org.jetbrains.exposed:exposed-core:$exposed_version"
    compile "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    compile "org.jetbrains.exposed:exposed-dao:$exposed_version"
    compile "org.jetbrains.exposed:exposed-jodatime:$exposed_version"
    compile "com.oracle:ojdbc8:$oracle_version"
    compile "com.zaxxer:HikariCP:$hikari_version"

    compile "org.jdbi:jdbi3-core:$jdbi3_version"
    compile "org.jdbi:jdbi3-kotlin:$jdbi3_version"
    compile "org.jdbi:jdbi3-oracle12:$jdbi3_version"
    compile "org.jdbi:jdbi3-stringtemplate4:$jdbi3_version"

}


task fatJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': project.name,
      'Main-Class': mainClassName
  }
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
  with jar
}
